install.packages("data.table")
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages(c("mgcv", "survival"))
print('hi')
print("Coursera Data Science Specialization from JHU")
print("Michael Galarnyk")
library(datasets)
data(iris)
data(iris)
"iris"
library(datasets)
iris
library(datasets)
iris_dt <- as.data.table(iris)
library(datasets)
library(data.table)
iris_dt <- as.data.table(iris)
iris_dt
iris_dt[Species == "setosa", ]
iris_dt[Species == "virginica",mean(Sepal.Length) ]
iris_dt[Species == "virginica",round(mean(Sepal.Length)) ]
colMeans(iris)
iris
class(iris)
iris_dt <- as.data.table(iris)
class(iris_dt)
apply(iris[,1:4], 1,mean)
?apply
iris
apply(iris, 2, mean)
colMeans(iris)
apply(iris, 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
apply(mtcars, 2, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
?with
mtcars
mtcars_dt <- as.data.table(mtcars)
mtcars_dt
mtcars[,]
mtcars[cyl == 4 or cyl == 8,, by = cyl ]
mtcars[, , by = .(by1 = cyl == 4, by2 = cyl == 8)]
mtcars[, .(cyl), by = .(by1 = cyl == 4, by2 = cyl == 8)]
mtcars_dt[, , by = .(by1 = cyl == 4, by2 = cyl == 8)]
mtcars_dt[,.(mean(hp)) , by = .(by1 = cyl == 4, by2 = cyl == 8)]
mtcars_dt[,  .(mean(hp)), by = cyl ]
mtcars_dt[,  .(mean(hp)), by = cyl ]
<- mtcars_dt[,  .(mean_cols = mean(hp)), by = cyl ]
mtcars_dt[,  .(mean_cols = mean(hp)), by = cyl]
mtcars_dt[,  .(mean_cols := mean(hp)), by = cyl]
mtcars_dt[,  .(mean_cols =: mean(hp)), by = cyl]
mtcars_dt[,  .(mean_cols := mean(hp)), by = cyl]
mtcars_dt[,  .(mean_cols = mean(hp)), by = cyl]
mtcars_dt <- mtcars_dt[,  .(mean_cols := mean(hp)), by = cyl]
mtcars_dt <- mtcars_dt[,  .(mean_cols := mean(hp)), by = cyl]
mtcars_dt <- mtcars_dt[,  .(mean_cols = mean(hp)), by = cyl]
mtcars_dt
mtcars_dt
mtcars_dt[cyl == 4, mean_cols] - mtcars_dt[cyl == 8, mean_cols]
abs(mtcars_dt[cyl == 4, mean_cols] - mtcars_dt[cyl == 8, mean_cols])
round(abs(mtcars_dt[cyl == 4, mean_cols] - mtcars_dt[cyl == 8, mean_cols]))
debug(ls)
ls
ls
source('~/R_Programming_Week3.R', echo=TRUE)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 2, mean)
?data.table::fread
fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
data.table::fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
install.packages("curl")
data.table::fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
housing <- data.table::fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
housing
colnames(housing)
housing[, .(val)]
housing[, .(VAL)]
housing[VAL == 24, .(VAL)]
housing[VAL == "24", .(VAL)]
housing[, .(VAL)]
housing[VAL == 24]
housing[VAL == 24][,.(VAL)]
housing[VAL == 24, (.N)]
housing[VAL == 24, .N]
data.table::fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")
?data.table::data.table
getwd()
setwd("~/Desktop/datasciencecoursera")
setwd("~/Desktop/datasciencecoursera/3_Getting_and_Cleaning_Data")
getwd()
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl, destfile = paste0(getwd()), method = "curl")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl, destfile = paste0(getwd(), '/'), method = "curl")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl, destfile = paste0(getwd(), '/getdata%2Fdata%2FDATA.gov_NGAP.xlsx'), method = "curl")
library(xlsx)
install.packages(xlsx)
install.packages("xlsx")
?xlsx::read.xlsx
xlsx::read.xlsx(file = "getdata%2Fdata%2FDATA.gov_NGAP.xlsx", sheetIndex = 7:15, rowIndex = 18:23, colIndex = 7:15)
xlsx::read.xlsx(file = "getdata%2Fdata%2FDATA.gov_NGAP.xlsx", sheetIndex = 1, rowIndex = 18:23, colIndex = 7:15)
dat <- xlsx::read.xlsx(file = "getdata%2Fdata%2FDATA.gov_NGAP.xlsx", sheetIndex = 1, rowIndex = 18:23, colIndex = 7:15)
sum(dat$Zip*dat$Ext,na.rm=T)
?XML
install.packages("XML")
?XML::xmlTreeParse
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- XML::xmlTreeParse(fileUrl, useInternalNodes = TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- XML::xmlTreeParse(fileUrl, useInternalNodes = TRUE)
rootNode <- XML::xmlRoot(doc)
xmlName(rootNode)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- XML::xmlTreeParse(fileUrl, useInternalNodes = TRUE)
rootNode <- XML::xmlRoot(doc)
XML::xmlName(rootNode)
doc <- XML::xmlTreeParse(fileUrl, useInternalNodes = TRUE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- XML::xmlTreeParse(fileUrl, useInternalNodes = TRUE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- XML::xmlTreeParse(fileUrl, useInternalNodes = FALSE)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(sub("s", "", fileURL), useInternal = TRUE)
rootNode <- XML::xmlRoot(doc)
XML::xmlName(rootNode)
rootNode <- XML::xmlRoot(doc)
doc <- xmlTreeParse(sub("s", "", fileURL), useInternal = TRUE)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- XML::xmlTreeParse(sub("s", "", fileURL), useInternal = TRUE)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- XML::xmlTreeParse(sub("s", "", fileURL), useInternal = TRUE)
XML::xmlName(rootNode)
rootNode <- XML::xmlRoot(doc)
rootNode
XML::xmlName(rootNode)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- XML::xmlTreeParse(sub("s", "", fileURL), useInternal = TRUE)
rootNode <- XML::xmlRoot(doc)
XML::xmlName(rootNode)
names(rootNode)
rootNode[[1]]
XML::xpathSApply(rootNode, "//zipcode", XML::xmlValue)
class(rootNode)
zipcodes <- XML::xpathSApply(rootNode, "//zipcode", XML::xmlValue)
DT <- data.table(A = zipcodes)
DT <- data.table::data.table(A = zipcodes)
DT
xmlZipcodeDT <- data.table::data.table(A = zipcodes)
xmlZipcodeDT
sapply(xmlZipcodeDT,class)
xmlZipcodeDT[zipcode == "21231", .N]
xmlZipcodeDT <- data.table::data.table(zipcode = zipcodes)
xmlZipcodeDT
xmlZipcodeDT[zipcode == "21231", .N]
DT <- data.table::fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
DT
DT[, pwgtp15]
housing <- data.table::fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
# VAL attribute says how much property is worth, .N is the number of rows
housing[VAL == 24, .N]
DT[, pwgtp15]
DT[, .(pwgtp15)]
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
